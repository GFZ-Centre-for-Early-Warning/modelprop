# Copyright Â© 2021 Helmholtz Centre Potsdam GFZ German Research Centre for Geosciences, Potsdam, Germany
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

stages:
  - test
  - build

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .pip

.install_requirements: &install_requirements
  - DEBIAN_FRONTEND=noninteractive apt-get update && apt-get upgrade -y
  - pip3 install --cache-dir=.pip -r requirements.txt

verify_python:
  image: python:3.7-buster
  stage: test
  tags:
    - group
  before_script:
    - *install_requirements
  script:
    - python3 -m compileall .

python_pycodestyle:
  image: python:3.7-buster
  stage: test
  # TODO: fix code to fit with PEP8 guidelines
  allow_failure: true
  tags:
    - group
  before_script:
    - *install_requirements
    - pip3 install --cache-dir=.pip pycodestyle
  script:
    - shopt -s globstar && pycodestyle {,**/}*.py

python_pylint:
  image: python:3.7-buster
  stage: test
  # TODO: fix code to get a better pylint rating
  allow_failure: true
  tags:
    - group
  before_script:
    - *install_requirements
    - pip3 install --cache-dir=.pip pylint
  script:
    - shopt -s globstar && pylint --fail-under=8 {,**/}*.py

python_black:
  image: python:3.7-buster
  stage: test
  tags:
    - group
  before_script:
    - *install_requirements
    - pip3 install --cache-dir=.pip black==21.4b2
  script:
    - black -l 79 --check .

run_tests:
  image: python:3.7-buster
  stage: test
  tags:
    - group
  before_script:
    - *install_requirements
  script:
    - python3 test_all.py

run_notebook:
  image: python:3.7-buster
  stage: test
  tags:
    - group
  before_script:
    - *install_requirements
    - pip3 install scipy jupyter nbconvert ipykernel matplotlib
  script:
    - jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 --output output.ipynb service_test.ipynb

verify_json:
  stage: test
  image: registry.gitlab.com/pipeline-components/jsonlint:0.12.0
  cache: {}
  script:
    - |
      find . -not -path './.git/*' -name '*.json' -type f -print0 |
      parallel --will-cite -k -0 -n1 jsonlint -q

dockerbuild_latest:
  image: docker/compose:1.29.2
  stage: build
  cache: {}
  tags:
    - group
  script:
    - docker build -t modelprop:latest -f metadata/Dockerfile .

    # push latest image to Docker Hub
    - docker tag modelprop:latest gfzriesgos/modelprop:latest
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWORD}
    - docker push gfzriesgos/modelprop:latest

    # push latest image to GitLab Container Registry
    - docker tag modelprop:latest git.gfz-potsdam.de:5000/id2/riesgos/modelprop:latest
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push git.gfz-potsdam.de:5000/id2/riesgos/modelprop:latest

dockerbuild_tagged:
  image: docker/compose:1.29.2
  stage: build
  cache: {}
  tags:
    - group
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - docker build -t modelprop:$CI_COMMIT_TAG -f metadata/Dockerfile .

    # push image to Docker Hub
    - docker tag modelprop:$CI_COMMIT_TAG gfzriesgos/modelprop:$CI_COMMIT_TAG
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWORD}
    - docker push gfzriesgos/modelprop:$CI_COMMIT_TAG

    # push image to GitLab Container Registry
    - docker tag modelprop:$CI_COMMIT_TAG git.gfz-potsdam.de:5000/id2/riesgos/modelprop:$CI_COMMIT_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push git.gfz-potsdam.de:5000/id2/riesgos/modelprop:$CI_COMMIT_TAG
